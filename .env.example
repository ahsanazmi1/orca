# Orca Core Environment Configuration
# Copy this file to .env and update with your actual values
# NEVER commit .env files with real secrets to version control

# =============================================================================
# DECISION SIGNING & CRYPTOGRAPHY
# =============================================================================

# Enable decision signing with verifiable credentials
# Set to 'true' to enable signing, 'false' to disable
ORCA_SIGN_DECISIONS=false

# Path to the signing key file (Ed25519 private key)
# For local development, use test keys generated with scripts/generate_test_keys.py
# For production, use Azure Key Vault or secure key management
ORCA_SIGNING_KEY_PATH=./keys/test_signing_key.pem

# Azure Key Vault URI for production key management
# Format: https://your-keyvault.vault.azure.net/
# Leave empty for local development
ORCA_KEY_VAULT_URI=

# Receipt hashing mode
# Set to 'true' to only generate receipt hashes (no full signing)
# Set to 'false' to generate full verifiable credential proofs
ORCA_RECEIPT_HASH_ONLY=false

# =============================================================================
# ML MODEL CONFIGURATION
# =============================================================================

# Enable real XGBoost model (set to 'false' to use deterministic stub)
ORCA_USE_XGB=false

# Enable SHAP explanations for model interpretability
# Requires SHAP library: pip install shap
ORCA_ENABLE_SHAP=false

# Model directory path (relative to project root)
# Contains versioned model artifacts: models/xgb/1.0.0/
ORCA_MODEL_DIR=./models/xgb

# XGBoost random state for deterministic predictions
XGBOOST_RANDOM_STATE=42

# Python hash seed for deterministic behavior
PYTHONHASHSEED=0

# =============================================================================
# AZURE OPENAI INTEGRATION (Phase 2)
# =============================================================================

# Azure OpenAI endpoint for LLM explanations
# Format: https://your-resource.openai.azure.com/
AZURE_OPENAI_ENDPOINT=

# Azure OpenAI API key
# Get from Azure portal under your OpenAI resource
AZURE_OPENAI_API_KEY=

# Azure OpenAI deployment name
# Default to gpt-4o-mini for cost-effective explanations
AZURE_OPENAI_DEPLOYMENT=gpt-4o-mini

# Azure OpenAI API version
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# =============================================================================
# AZURE CLOUD INTEGRATION
# =============================================================================

# Azure subscription ID
AZURE_SUBSCRIPTION_ID=

# Azure tenant ID
AZURE_TENANT_ID=

# Azure client ID (service principal)
AZURE_CLIENT_ID=

# Azure client secret (service principal)
AZURE_CLIENT_SECRET=

# Azure resource group
AZURE_RESOURCE_GROUP=

# Azure location/region
AZURE_LOCATION=eastus

# =============================================================================
# DEVELOPMENT & DEBUGGING
# =============================================================================

# Enable debug logging
ORCA_DEBUG=false

# Enable verbose CLI output
ORCA_VERBOSE=false

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
ORCA_LOG_LEVEL=INFO

# Enable development mode (relaxes some validations)
ORCA_DEV_MODE=false

# =============================================================================
# API CONFIGURATION
# =============================================================================

# API host and port
API_HOST=0.0.0.0
API_PORT=8000

# Enable CORS for development
ENABLE_CORS=true

# API rate limiting (requests per minute)
API_RATE_LIMIT=100

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable experimental features
# ENABLE_EXPERIMENTAL=false

# Enable beta features
# ENABLE_BETA=false

# Enable legacy API endpoints
# ENABLE_LEGACY_API=true

# =============================================================================
# LOCAL DEVELOPMENT OVERRIDES
# =============================================================================

# Override model version for testing
# ORCA_MODEL_VERSION=1.0.0

# Override AP2 version for testing
# ORCA_AP2_VERSION=0.1.0

# Enable mock external services
# ENABLE_MOCKS=false

# Mock external service responses
# MOCK_RESPONSES=false
