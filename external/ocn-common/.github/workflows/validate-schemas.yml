name: Validate CloudEvent Schemas

on:
  push:
    branches: [ main, phase-3-bidding ]
    paths:
      - 'common/events/v1/*.json'
      - 'examples/events/*.json'
      - 'tests/test_phase3_schemas.py'
  pull_request:
    branches: [ main, phase-3-bidding ]
    paths:
      - 'common/events/v1/*.json'
      - 'examples/events/*.json'
      - 'tests/test_phase3_schemas.py'

jobs:
  validate-schemas:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jsonschema
    
    - name: Run schema validation tests
      run: |
        cd tests
        python test_phase3_schemas.py
    
    - name: Validate JSON syntax
      run: |
        echo "Validating JSON syntax in schemas..."
        for file in common/events/v1/*.json; do
          echo "Validating $file"
          python -m json.tool "$file" > /dev/null
        done
        
        echo "Validating JSON syntax in examples..."
        for file in examples/events/*.json; do
          echo "Validating $file"
          python -m json.tool "$file" > /dev/null
        done
    
    - name: Check schema completeness
      run: |
        echo "Checking Phase 3 schema completeness..."
        
        # Check that all required Phase 3 schemas exist
        required_schemas=(
          "weave.bid_request.v1.schema.json"
          "weave.bid_response.v1.schema.json"
          "oasis.constraint.v1.schema.json"
          "onyx.trust_signal.v1.schema.json"
        )
        
        for schema in "${required_schemas[@]}"; do
          if [ ! -f "common/events/v1/$schema" ]; then
            echo "❌ Missing required schema: $schema"
            exit 1
          else
            echo "✅ Found schema: $schema"
          fi
        done
        
        # Check that corresponding examples exist
        required_examples=(
          "weave.bid_request.example.json"
          "weave.bid_response.example.json"
          "oasis.constraint.example.json"
          "onyx.trust_signal.example.json"
        )
        
        for example in "${required_examples[@]}"; do
          if [ ! -f "examples/events/$example" ]; then
            echo "❌ Missing required example: $example"
            exit 1
          else
            echo "✅ Found example: $example"
          fi
        done
        
        echo "✅ All required Phase 3 schemas and examples present"
    
    - name: Validate CloudEvent compliance
      run: |
        echo "Validating CloudEvent compliance..."
        
        # Check that all schemas follow CloudEvents 1.0 spec
        for schema_file in common/events/v1/*.schema.json; do
          echo "Checking CloudEvent compliance for $schema_file"
          
          # Use jq to validate CloudEvent structure (if available)
          if command -v jq >/dev/null 2>&1; then
            # Check that required CloudEvent fields are in schema
            if ! jq -e '.properties.specversion' "$schema_file" >/dev/null; then
              echo "❌ Missing specversion field in $schema_file"
              exit 1
            fi
            
            if ! jq -e '.properties.id' "$schema_file" >/dev/null; then
              echo "❌ Missing id field in $schema_file"
              exit 1
            fi
            
            if ! jq -e '.properties.source' "$schema_file" >/dev/null; then
              echo "❌ Missing source field in $schema_file"
              exit 1
            fi
            
            if ! jq -e '.properties.type' "$schema_file" >/dev/null; then
              echo "❌ Missing type field in $schema_file"
              exit 1
            fi
            
            if ! jq -e '.properties.subject' "$schema_file" >/dev/null; then
              echo "❌ Missing subject field in $schema_file"
              exit 1
            fi
            
            if ! jq -e '.properties.time' "$schema_file" >/dev/null; then
              echo "❌ Missing time field in $schema_file"
              exit 1
            fi
            
            if ! jq -e '.properties.data' "$schema_file" >/dev/null; then
              echo "❌ Missing data field in $schema_file"
              exit 1
            fi
            
            echo "✅ CloudEvent compliance verified for $schema_file"
          else
            echo "⚠️ jq not available, skipping detailed CloudEvent validation"
          fi
        done
